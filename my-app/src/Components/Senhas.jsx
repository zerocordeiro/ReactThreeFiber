/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame, useLoader } from '@react-three/fiber';
import gsap from "gsap"

import img1 from '../md-v.png'
import img2 from '../md-h.png'
import img3 from '../ctv.png'
import img4 from '../ipad.png'

export const FLOOR_HEIGHT = 10;
export const NB_FLOORS = 4;



export function Senhas(props) {
  const { nodes, materials } = useGLTF('./Senhas.glb')
  const ref = useRef();
  const tl = useRef();

  const teste = useRef();
  const senhas = useRef();
  const teste2 = useRef();
  const teste3 = useRef();
  const luz1 = useRef();

  const bloco01 = useRef();
  const bloco02 = useRef();
  const bloco03 = useRef();
  const bloco04 = useRef();

  const texture1 = useLoader(THREE.TextureLoader, img1);
  const texture2 = useLoader(THREE.TextureLoader, img2);
  const texture3 = useLoader(THREE.TextureLoader, img3);
  const texture4 = useLoader(THREE.TextureLoader, img4);

  const scroll = useScroll();

  useFrame(() =>{
    tl.current.seek(scroll.offset*tl.current.duration());


    if (senhas.current.position.y > -2.5) {// Change 4 to the desired stopping position
      senhas.current.position.y -= 0.05;   // You can adjust the speed here
      senhas.current.rotation.y += Math.PI*0.02;
    }
  // console.log(scroll.offset);
  });


  useLayoutEffect(() => {
    tl.current = gsap.timeline();


    tl.current.to(
      ref.current.position,
      {
          duration:1, 
          y: -FLOOR_HEIGHT, 
          x: -1,
      },
      0
  );
  tl.current.to(
      ref.current.rotation,
      {
          duration:1, 
          y: -Math.PI/12, 
      },
      0
  );
  tl.current.to(
      bloco02.current.rotation,
      {
          duration:1, 
          y: Math.PI/6, 
      },
      0
  );


  tl.current.to(
      ref.current.position,
      {
          duration:1, 
          y: -FLOOR_HEIGHT* 2, 
          x: 0,
      },
      1
  );
  tl.current.to(
    ref.current.rotation,
    {
        duration:1, 
        y: Math.PI/12, 
    },
    1
  );
  tl.current.to(
    bloco03.current.rotation,
    {
        duration:1, 
        y: -Math.PI/10, 
    },
    1
  );

  tl.current.to(
      ref.current.position,
      {
          duration:1, 
          y: -FLOOR_HEIGHT* 3, 
          x: -0.5,
      },
      2
  );
  tl.current.to(
    ref.current.rotation,
    {
        duration:1, 
        y: -Math.PI/12, 
    },
    2
  );
  // tl.current.to(
  //   bloco04.current.rotation,
  //   {
  //       duration:1, 
  //       y: Math.PI/6, 
  //   },
  //   2
  // );

  }, []);


  return (
    <group {...props} dispose={null} ref={ref} position={[0,0,0]}>
        <group ref={senhas}  position={[-4,2.5,0]}>
          <mesh geometry={nodes.Cube.geometry} material={materials['Material.002']} position={[0, 1.286, 0]} castShadow  />
          <mesh geometry={nodes.Plane.geometry} material={materials['Material.001']} position={[1.021, 2.388, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[1, 1, 0.644]} castShadow />
          <mesh geometry={nodes.Plane001.geometry} material={materials['Material.001']} position={[1.188, 0, 0]} castShadow receiveShadow/>
        </group>

    <group
      position={[0, FLOOR_HEIGHT,0]}
      rotation={[0, 0, 0]}
      ref={bloco01}
    >
      <mesh>  
        <boxGeometry args={[2.9, 5.1, 0.25]} />
        <meshBasicMaterial color='#445577' />
      </mesh>
      <mesh
      position={[0,0,0.126]}>  
        <planeGeometry args={[2.8, 5]} />
        <meshBasicMaterial attach="material" map={texture1} toneMapped={false}/>
      </mesh>
    </group>

    <group
      position={[0, 2*FLOOR_HEIGHT, 0]} 
      rotation={[0, Math.PI/8, 0]} 
      ref={bloco02}
    > 
      <mesh>  
        <boxGeometry args={[5.1, 2.9, 0.25]} />
        <meshBasicMaterial color='#445577' />
      </mesh>
      <mesh
      position={[0,0,0.126]}>  
        <planeGeometry args={[5, 2.8]} />
        <meshBasicMaterial attach="material" map={texture2} toneMapped={false}/>
    </mesh>
    </group>

    <group
      position={[0 , 3*FLOOR_HEIGHT, 0]} 
      rotation={[0, -Math.PI / 3.5, 0]}
      ref={bloco03}
    >
      <mesh>  
      <boxGeometry args={[5.1, 2.9, 0.25]} />
      <meshBasicMaterial color='#445577' />
      </mesh>
      <mesh
      position={[0,0,0.126]}>  
        <planeGeometry args={[5, 2.8]} />
        <meshBasicMaterial attach="material" map={texture3} toneMapped={false}/>
    </mesh>
    </group>

{/* //IPAD
    <group
    position={[0, 4*FLOOR_HEIGHT, 0]} 
    rotation={[0, -Math.PI / 12, 0]}
    ref={bloco04}
    >
      <mesh>  
      <boxGeometry args={[3.1, 2.35,  0.05]} />
      <meshBasicMaterial color='#333333' />
    </mesh>
    <mesh
    position={[0,0,0.051]}>  
      <planeGeometry args={[3, 2.25]} />
      <meshBasicMaterial attach="material" map={texture4} toneMapped={false}/>
    </mesh>
    </group> */}

    </group>
    
    
    
  )
}

useGLTF.preload('./Senhas.glb')